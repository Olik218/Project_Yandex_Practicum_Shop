{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Названиен проекта:** Аналитик крупного интернет-магазина\n",
    "\n",
    "**Краткое описание:** Аналитик крупного интернет-магазина совместно с отделом маркетинга  подготовили список гипотез для увеличения выручки.\n",
    "\n",
    "**Задача проекта:** Проверить гипотезы, которые могут помочь увеличить выручку магазина.\n",
    "\n",
    "**Цель проекта:** Увеличение выручки магазина\n",
    "\n",
    "**Описание исходных данных:** \n",
    "\n",
    "* Файл /datasets/hypothesis.csv. Скачать датасет\n",
    "  - Hypothesis — краткое описание гипотезы;\n",
    "  - Reach — охват пользователей по 10-балльной шкале;\n",
    "  - Impact — влияние на пользователей по 10-балльной шкале;\n",
    "  - Confidence — уверенность в гипотезе по 10-балльной шкале;\n",
    "  - Efforts — затраты ресурсов на проверку гипотезы по 10-балльной шкале. Чем больше значение Efforts, тем дороже проверка гипотезы.\n",
    "* Файл /datasets/orders.csv. Скачать датасет\n",
    "  - transactionId — идентификатор заказа;\n",
    "  - visitorId — идентификатор пользователя, совершившего заказ;\n",
    "  - date — дата, когда был совершён заказ;\n",
    "  - revenue — выручка заказа;\n",
    "  - group — группа A/B-теста, в которую попал заказ.\n",
    "* Файл /datasets/visitors.csv. Скачать датасет\n",
    "  - date — дата;\n",
    "  - group — группа A/B-теста;\n",
    "  - visitors — количество пользователей в указанную дату в указанной группе A/B-теста\n",
    "**План работы над прооектом:**\n",
    "* Приоритизация гипотез.\n",
    "   - Применить фреймворк ICE для приоритизации гипотез. Отсортировать их по убыванию приоритета.\n",
    "   - Применить фреймворк RICE для приоритизации гипотез. Отсортировать их по убыванию приоритета.\n",
    "   - Указать, как изменилась приоритизация гипотез при применении RICE вместо ICE. Объяснить, почему так произошло.\n",
    "* Проанализируйте A/B-тест:\n",
    "   - Построить график кумулятивной выручки по группам.\n",
    "   - Построить график кумулятивного среднего чека по группам. \n",
    "   - Построить график относительного изменения кумулятивного среднего чека группы B к группе A. \n",
    "   - Построить график кумулятивного среднего количества заказов на посетителя по группам. \n",
    "   - Построить график относительного изменения кумулятивного среднего количества заказов на посетителя группы B к группе A. \n",
    "   - Построить точечный график количества заказов по пользователям. \n",
    "   - Посчитать 95-й и 99-й перцентили количества заказов на пользователя. Выбрать границу для определения аномальных пользователей.\n",
    "   - Построить точечный график стоимостей заказов.\n",
    "   - Посчитать 95-й и 99-й перцентили стоимости заказов. Выбрать границу для определения аномальных заказов.\n",
    "   - Посчитать статистическую значимость различий в среднем количестве заказов на посетителя между группами по «сырым» данным. \n",
    "   - Посчитать статистическую значимость различий в среднем чеке заказа между группами по «сырым» данным. \n",
    "   - Посчитать статистическую значимость различий в среднем количестве заказов на посетителя между группами по «очищенным» данным. \n",
    "   - Посчитать статистическую значимость различий в среднем чеке заказа между группами по «очищенным» данным. \n",
    "   - Принять решение по результатам теста и объясните его.\n",
    "   \n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Предобработка данных"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Подгрузим нужные библиотеки."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as stats\n",
    "import numpy as np    \n",
    "from scipy import stats as st\n",
    "import seaborn as sns\n",
    "from IPython.display import display\n",
    "from collections import defaultdict"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Сутки не работала платформа, похоже отсюда пробелы :( очень жаль, что потратила Ваше время, сейчас заработала, все постараюсь поправить.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Для решение задач  части №1 откроем файл hypothesis.csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "hypo=pd.read_csv('/datasets/hypothesis.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим информацию по данному файлу"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 9 entries, 0 to 8\n",
      "Data columns (total 5 columns):\n",
      " #   Column      Non-Null Count  Dtype \n",
      "---  ------      --------------  ----- \n",
      " 0   Hypothesis  9 non-null      object\n",
      " 1   Reach       9 non-null      int64 \n",
      " 2   Impact      9 non-null      int64 \n",
      " 3   Confidence  9 non-null      int64 \n",
      " 4   Efforts     9 non-null      int64 \n",
      "dtypes: int64(4), object(1)\n",
      "memory usage: 488.0+ bytes\n"
     ]
    }
   ],
   "source": [
    "hypo.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "При анализе таблицы hypo выявлны 9 строк, 5 столбцов без пропусков и дубликатов. Все хорошо.\n",
    "Выведем на экран таблицу полученную из файла hypothesis.csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Hypothesis</th>\n",
       "      <th>Reach</th>\n",
       "      <th>Impact</th>\n",
       "      <th>Confidence</th>\n",
       "      <th>Efforts</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Запустить собственную службу доставки, что сократит срок доставки заказов</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Запустить акцию, дающую скидку на товар в день рождения</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                     Hypothesis  \\\n",
       "0  Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей             \n",
       "1  Запустить собственную службу доставки, что сократит срок доставки заказов                                      \n",
       "2  Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа   \n",
       "3  Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар            \n",
       "4  Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей                               \n",
       "5  Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов                       \n",
       "6  Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию           \n",
       "7  Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок               \n",
       "8  Запустить акцию, дающую скидку на товар в день рождения                                                        \n",
       "\n",
       "   Reach  Impact  Confidence  Efforts  \n",
       "0  3      10      8           6        \n",
       "1  2      5       4           10       \n",
       "2  8      3       7           3        \n",
       "3  8      3       3           8        \n",
       "4  3      1       1           1        \n",
       "5  3      2       2           3        \n",
       "6  5      3       8           3        \n",
       "7  10     7       8           5        \n",
       "8  1      9       9           5        "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.options.display.max_colwidth = 1\n",
    "hypo"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Обработаем таблицу и изменим заголовки столбцов на нижний регистр"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "hypo.columns = hypo.columns.str.lower()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Подгрузим таблицы для задачи №2 ."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "orders = pd.read_csv('/datasets/orders.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "visitors = pd.read_csv('/datasets/visitors.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим информацию по таблице orders."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1197 entries, 0 to 1196\n",
      "Data columns (total 5 columns):\n",
      " #   Column         Non-Null Count  Dtype \n",
      "---  ------         --------------  ----- \n",
      " 0   transactionId  1197 non-null   int64 \n",
      " 1   visitorId      1197 non-null   int64 \n",
      " 2   date           1197 non-null   object\n",
      " 3   revenue        1197 non-null   int64 \n",
      " 4   group          1197 non-null   object\n",
      "dtypes: int64(3), object(2)\n",
      "memory usage: 46.9+ KB\n"
     ]
    }
   ],
   "source": [
    "orders.info()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "transactionId    0\n",
       "visitorId        0\n",
       "date             0\n",
       "revenue          0\n",
       "group            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders.isna().sum() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В таблице orders 1197 строк, пропусков нет. Проверим на дубликаты."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "orders.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Дубликаты в таблице orders  также отсутствуют. Все хорошо.\n",
    "\n",
    "Узнаем максимальную и минимальную дату заказов, а также максимальную и минимальную стоимость заказов."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "МАХ дата, 2019-08-31\n"
     ]
    }
   ],
   "source": [
    "print('МАХ дата,',orders['date'].max())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MIN дата, 2019-08-01\n"
     ]
    }
   ],
   "source": [
    "print('MIN дата,',orders['date'].min())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "МАХ стоимость, 1294500\n"
     ]
    }
   ],
   "source": [
    "print('МАХ стоимость,',orders['revenue'].max())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MIN стоимость, 50\n"
     ]
    }
   ],
   "source": [
    "print('MIN стоимость,',orders['revenue'].min())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Изменим формат столбца с датой  date  с помощью to_datetime:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "orders['date'] = pd.to_datetime(orders['date'], format='%Y-%m-%d')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Подведем итог по предобработке таблицы orders: \n",
    "- 1197 строк\n",
    "- пропусков нет\n",
    "- дублткатов 0\n",
    "- минимальная дата: 1 августа 2019г \n",
    "- максимальная дата: 31 августа 2019г\n",
    "- минимальная стоимость заказа: 50\n",
    "- максимальная стоимость заказа: 1294500"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проверим таблицу visitors. Сначала ее отобразим:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>group</th>\n",
       "      <th>visitors</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-08-01</td>\n",
       "      <td>A</td>\n",
       "      <td>719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2019-08-02</td>\n",
       "      <td>A</td>\n",
       "      <td>619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2019-08-03</td>\n",
       "      <td>A</td>\n",
       "      <td>507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2019-08-04</td>\n",
       "      <td>A</td>\n",
       "      <td>717</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2019-08-05</td>\n",
       "      <td>A</td>\n",
       "      <td>756</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>2019-08-27</td>\n",
       "      <td>B</td>\n",
       "      <td>720</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>2019-08-28</td>\n",
       "      <td>B</td>\n",
       "      <td>654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>2019-08-29</td>\n",
       "      <td>B</td>\n",
       "      <td>531</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>2019-08-30</td>\n",
       "      <td>B</td>\n",
       "      <td>490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>2019-08-31</td>\n",
       "      <td>B</td>\n",
       "      <td>718</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>62 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          date group  visitors\n",
       "0   2019-08-01  A     719     \n",
       "1   2019-08-02  A     619     \n",
       "2   2019-08-03  A     507     \n",
       "3   2019-08-04  A     717     \n",
       "4   2019-08-05  A     756     \n",
       "..         ... ..     ...     \n",
       "57  2019-08-27  B     720     \n",
       "58  2019-08-28  B     654     \n",
       "59  2019-08-29  B     531     \n",
       "60  2019-08-30  B     490     \n",
       "61  2019-08-31  B     718     \n",
       "\n",
       "[62 rows x 3 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visitors"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Получим информацию по таблице visitors:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 62 entries, 0 to 61\n",
      "Data columns (total 3 columns):\n",
      " #   Column    Non-Null Count  Dtype \n",
      "---  ------    --------------  ----- \n",
      " 0   date      62 non-null     object\n",
      " 1   group     62 non-null     object\n",
      " 2   visitors  62 non-null     int64 \n",
      "dtypes: int64(1), object(2)\n",
      "memory usage: 1.6+ KB\n"
     ]
    }
   ],
   "source": [
    "visitors.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date        0\n",
       "group       0\n",
       "visitors    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visitors.isna().sum() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "В таблице 62 строки, 3 столбца. Пропусков нет. Проверим дубликаты:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "visitors.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сменим формат столбца date с помощью  to_datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "visitors['date'] = pd.to_datetime(visitors['date'], format='%Y-%m-%d')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим максимальное и минимальное количество пользователей в день:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "МАХ количество пользователей, 770\n"
     ]
    }
   ],
   "source": [
    "print('МАХ количество пользователей,',visitors['visitors'].max())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MIN количество пользователей, 361\n"
     ]
    }
   ],
   "source": [
    "print('MIN количество пользователей,',visitors['visitors'].min())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Анализ таблицы visitors показал, что в данной таблице:\n",
    "- 62 строки\n",
    "- пропусков нет\n",
    "- дубликатов нет\n",
    "- минимальное количество пользователей: 361\n",
    "- максимальное количество пользователей: 770"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### ВЫВОД:\n",
    "Выполнена предобработка данных в трех таблицах: hypo, orders,visitors. Пропусков и дубликатов не выявлено. В таблицах подправлены форматы по необходимости и регистр в заголовках. Данные готовы для работы."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Часть 1. Приоритизация гипотез."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Применим фреймворк ICE для приоритизации гипотез. Отсортируем их по убыванию приоритета."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "hypo['ICE']=((hypo['impact']*hypo['confidence']) /hypo['efforts']).round(2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hypothesis</th>\n",
       "      <th>reach</th>\n",
       "      <th>impact</th>\n",
       "      <th>confidence</th>\n",
       "      <th>efforts</th>\n",
       "      <th>ICE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Запустить акцию, дающую скидку на товар в день рождения</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>16.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>13.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>11.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>8.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Запустить собственную службу доставки, что сократит срок доставки заказов</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>2.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>1.12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                     hypothesis  \\\n",
       "8  Запустить акцию, дающую скидку на товар в день рождения                                                        \n",
       "0  Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей             \n",
       "7  Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок               \n",
       "6  Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию           \n",
       "2  Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа   \n",
       "1  Запустить собственную службу доставки, что сократит срок доставки заказов                                      \n",
       "5  Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов                       \n",
       "3  Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар            \n",
       "4  Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей                               \n",
       "\n",
       "   reach  impact  confidence  efforts    ICE  \n",
       "8  1      9       9           5        16.20  \n",
       "0  3      10      8           6        13.33  \n",
       "7  10     7       8           5        11.20  \n",
       "6  5      3       8           3        8.00   \n",
       "2  8      3       7           3        7.00   \n",
       "1  2      5       4           10       2.00   \n",
       "5  3      2       2           3        1.33   \n",
       "3  8      3       3           8        1.12   \n",
       "4  3      1       1           1        1.00   "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hypo.sort_values(by='ICE', ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Применим фреймворк RICE для приоритизации гипотез. Отсортируем их по убыванию приоритета."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "hypo['RICE'] = (hypo['reach'] * hypo['impact'] * hypo['confidence']) / hypo ['efforts'].round(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hypothesis</th>\n",
       "      <th>reach</th>\n",
       "      <th>impact</th>\n",
       "      <th>confidence</th>\n",
       "      <th>efforts</th>\n",
       "      <th>ICE</th>\n",
       "      <th>RICE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>11.20</td>\n",
       "      <td>112.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>7.00</td>\n",
       "      <td>56.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>13.33</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>8.00</td>\n",
       "      <td>40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Запустить акцию, дающую скидку на товар в день рождения</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>16.20</td>\n",
       "      <td>16.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>1.12</td>\n",
       "      <td>9.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Запустить собственную службу доставки, что сократит срок доставки заказов</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>2.00</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1.33</td>\n",
       "      <td>4.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.00</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                                                                     hypothesis  \\\n",
       "7  Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок               \n",
       "2  Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа   \n",
       "0  Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей             \n",
       "6  Показать на главной странице баннеры с актуальными акциями и распродажами, чтобы увеличить конверсию           \n",
       "8  Запустить акцию, дающую скидку на товар в день рождения                                                        \n",
       "3  Изменить структура категорий, что увеличит конверсию, т.к. пользователи быстрее найдут нужный товар            \n",
       "1  Запустить собственную службу доставки, что сократит срок доставки заказов                                      \n",
       "5  Добавить страницу отзывов клиентов о магазине, что позволит увеличить количество заказов                       \n",
       "4  Изменить цвет фона главной страницы, чтобы увеличить вовлеченность пользователей                               \n",
       "\n",
       "   reach  impact  confidence  efforts    ICE   RICE  \n",
       "7  10     7       8           5        11.20  112.0  \n",
       "2  8      3       7           3        7.00   56.0   \n",
       "0  3      10      8           6        13.33  40.0   \n",
       "6  5      3       8           3        8.00   40.0   \n",
       "8  1      9       9           5        16.20  16.2   \n",
       "3  8      3       3           8        1.12   9.0    \n",
       "1  2      5       4           10       2.00   4.0    \n",
       "5  3      2       2           3        1.33   4.0    \n",
       "4  3      1       1           1        1.00   3.0    "
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hypo.sort_values(by='RICE', ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Укажим, как изменилась приоритизация гипотез при применении RICE вместо ICE. Объясним, почему так произошло."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "При использовании фреймворка ICE мы видим приоритет у гипотезы номер 8(\"Запустить акцию, дающую скидку на товар в день рождения\t\"), также в лидерах гипотезы номер 0(\"Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей\") и 7(\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\"). При использовании фреймворка RICE картина анализа меняется, тут преимущество имеет гипотеза 7(\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\"), на 2м и 3м местах гипотезы 2(\"Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа\") и 0(\"Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей\") соответственно.\n",
    "\n",
    "В случае применения фреймворка RICE гипотеза 7  (\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\")(\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\") стала приоритетной, так как количество пользователей, которых каснется изменений у этой гипотезы самое большое (reach = 10), а у гипотезы 8(\"Запустить акцию, дающую скидку на товар в день рождения\"), данный параметр намного меньше(reach=1), так как сама по себе гипотеза указывает на пользователей, у которых день рождения в исследуемый период, а таких пользователей мало.\n",
    "\n",
    "Отличие фрейморков ICE и RICE  заключается в том, что фреймворк RICE включает в себя оценку охвата, то есть предпологаемых пользователей продукта, в данном случае этот показатель(reach) имеет разбег от 1 до 10 и существенно влияет на результат"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Часть 2. Анализ A/B-теста"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Построим график кумулятивной выручки по группам. Сделаем выводы и предположения."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посмотрим скольго человек входят в обе группы сразу."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "group    58\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(orders.groupby('visitorId')\n",
    "    .agg({'group': pd.Series.nunique})\n",
    "    .query('group == 2').count())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Из 1197 пользователей лишь 58 входят в обе группы, это составляет 4,8% от общего количества. В данном случае предпологаю, что они не смогут существенно повлиять на ход иследования и оставлю их как есть."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сформируем кумулятивные данные."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        date group  orders  buyers  revenue  visitors\n",
      "0 2019-08-01  A     24      20      148579   719     \n",
      "1 2019-08-01  B     21      20      101217   713     \n",
      "2 2019-08-02  A     44      38      242401   1338    \n",
      "3 2019-08-02  B     45      43      266748   1294    \n",
      "4 2019-08-03  A     68      62      354874   1845    \n",
      "5 2019-08-03  B     61      59      380996   1803    \n",
      "6 2019-08-04  A     84      77      425699   2562    \n",
      "7 2019-08-04  B     78      75      489567   2573    \n",
      "8 2019-08-05  A     109     100     549917   3318    \n",
      "9 2019-08-05  B     101     98      581995   3280    \n"
     ]
    }
   ],
   "source": [
    "# создаем массив уникальных пар значений дат и групп теста\n",
    "datesGroups = orders[['date','group']].drop_duplicates()\n",
    "# получаем агрегированные кумулятивные по дням данные о заказах \n",
    "ordersAggregated = datesGroups.apply(lambda x: orders[np.logical_and(orders['date'] <= x['date'],\n",
    "    orders['group'] == x['group'])].agg({'date' : 'max', 'group' : 'max', 'transactionId' : 'nunique', 'visitorId' : 'nunique', 'revenue' : 'sum'}), axis=1).sort_values(by=['date','group'])\n",
    "# получаем агрегированные кумулятивные по дням данные о посетителях интернет-магазина \n",
    "visitorsAggregated = datesGroups.apply(lambda x: visitors[np.logical_and(visitors['date'] <= x['date'],\n",
    "    visitors['group'] == x['group'])].agg({'date' : 'max', 'group' : 'max', 'visitors' : 'sum'}), axis=1).sort_values(by=['date','group'])\n",
    "# объединяем кумулятивные данные в одной таблице и присваиваем ее столбцам понятные названия\n",
    "cumulativeData = ordersAggregated.merge(visitorsAggregated, left_on=['date', 'group'], right_on=['date', 'group'])\n",
    "cumulativeData.columns = ['date', 'group', 'orders', 'buyers', 'revenue', 'visitors']\n",
    "print(cumulativeData.head(10))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Построим графики кумулятивной выручки по дням и группам A/B-тестирования: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# датафрейм с кумулятивным количеством заказов и кумулятивной выручкой по дням в группе А\n",
    "cumulativeRevenueA = cumulativeData[cumulativeData['group']=='A'][['date','revenue', 'orders']]\n",
    "# датафрейм с кумулятивным количеством заказов и кумулятивной выручкой по дням в группе B\n",
    "cumulativeRevenueB = cumulativeData[cumulativeData['group']=='B'][['date','revenue', 'orders']]\n",
    "# Строим график выручки группы А\n",
    "plt.plot(cumulativeRevenueA['date'], cumulativeRevenueA['revenue'], label='A')\n",
    "# Строим график выручки группы B\n",
    "plt.plot(cumulativeRevenueB['date'], cumulativeRevenueB['revenue'], label='B')\n",
    "plt.ylabel('Выручка')\n",
    "plt.xlabel('Дата')\n",
    "plt.xticks(rotation = 45)\n",
    "plt.title('График выручки по группам')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "\n",
    "Оба графика имеют тенденцию роста во времени. Но при этом у графика группы В имеется резкий скачок вверх в период примерно 18-19 августа 2019года, этот скачок мог быть вызван оформлением дорого заказа или резкого увеличения количества заказов."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Построим график кумулятивного среднего чека по группам. \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(cumulativeRevenueA['date'], cumulativeRevenueA['revenue']/cumulativeRevenueA['orders'], label='A')\n",
    "plt.plot(cumulativeRevenueB['date'], cumulativeRevenueB['revenue']/cumulativeRevenueB['orders'], label='B')\n",
    "plt.ylabel('Средний чек')\n",
    "plt.xlabel('Дата')\n",
    "plt.xticks(rotation = 45)\n",
    "plt.title('График среднего чека по группам')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "\n",
    "В группе А средний чек в самом начале периода имел небольшой спад, но потом начал расти и примерно в середина периода он остановился и сохранялся одинаковым до конца периода. \n",
    "\n",
    "В группе В до середины периода был постепенный рост, а потом снова как и в первом графике есть резкий скачок, возможно попали дорогие заказы, возможно в группе В недостаточно данных для получения среднего чека.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Построим график относительного изменения кумулятивного среднего чека группы B к группе A. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# собираем данные в одном датафрейме\n",
    "mergedCumulativeRevenue = cumulativeRevenueA.merge(cumulativeRevenueB, left_on='date', right_on='date', how='left', suffixes=['A', 'B'])\n",
    "# cтроим отношение средних чеков\n",
    "plt.plot(mergedCumulativeRevenue['date'], (mergedCumulativeRevenue['revenueB']/mergedCumulativeRevenue['ordersB'])/(mergedCumulativeRevenue['revenueA']/mergedCumulativeRevenue['ordersA'])-1)\n",
    "# добавляем ось X\n",
    "plt.axhline(y=0, color='red', linestyle='--')\n",
    "\n",
    "plt.ylabel('Изменение среднего чека')\n",
    "plt.xlabel('Дата')\n",
    "plt.xticks(rotation = 45)\n",
    "plt.title('График относительного изменения кумулятивного среднего чека')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "На графике есть рпезкие скачки, которые могут быть вызваны либо дорогими покупками, либо выбросами."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Построим график кумулятивного среднего количества заказов на посетителя по группам. Сделаем  выводы и предположения."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# считаем кумулятивную конверсию\n",
    "cumulativeData['conversion'] = cumulativeData['orders']/cumulativeData['visitors']\n",
    "# отделяем данные по группе A\n",
    "cumulativeDataA = cumulativeData[cumulativeData['group']=='A']\n",
    "# отделяем данные по группе B\n",
    "cumulativeDataB = cumulativeData[cumulativeData['group']=='B']\n",
    "# строим графики\n",
    "plt.plot(cumulativeDataA['date'], cumulativeDataA['conversion'], label='A')\n",
    "plt.plot(cumulativeDataB['date'], cumulativeDataB['conversion'], label='B')\n",
    "plt.legend()\n",
    "plt.ylabel('Кумулятивная конверсия')\n",
    "plt.xlabel('Дата')\n",
    "plt.xticks(rotation = 45)\n",
    "plt.title('График кумулятивной конверсии по группам')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "\n",
    "В результате имеем достаточно симметричный график среднего количества покупок.Изначально группы колеблются около одного значения. Далее видим как у группы В увелиичвается показатель среднего количества заказов и после  9 августа графики перестают резко изменяться и фиксируются до конца периода"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Построим график относительного изменения кумулятивного среднего количества заказов на посетителя группы B к группе A. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "mergedCumulativeConversions = cumulativeDataA[['date','conversion']].merge(cumulativeDataB[['date','conversion']], left_on='date', right_on='date', how='left', suffixes=['A', 'B'])\n",
    "plt.plot(mergedCumulativeConversions['date'], mergedCumulativeConversions['conversionB']/mergedCumulativeConversions['conversionA']-1, label=\"Относительный прирост конверсии группы B относительно группы A\")\n",
    "plt.legend()\n",
    "plt.axhline(y=0, color='green', linestyle='--')\n",
    "plt.axhline(y=-0.1, color='red', linestyle='--')\n",
    "\n",
    "plt.ylabel('Кумулятивная конверсия')\n",
    "plt.xlabel('Дата')\n",
    "plt.xticks(rotation = 45)\n",
    "plt.title('График относительного изменения кумулятивной конверсии группы B к группе A')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "\n",
    "В начале теста группа B была приблизительно одинакова к группе A, но затем вырвалась вперёд, и зафиксировалась"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Построим точечный график количества заказов по пользователям"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "       visitorId  orders\n",
      "1023  4256040402  11    \n",
      "591   2458001652  11    \n",
      "569   2378935119  9     \n",
      "487   2038680547  8     \n",
      "44    199603092   5     \n",
      "744   3062433592  5     \n",
      "55    237748145   5     \n",
      "917   3803269165  5     \n",
      "299   1230306981  5     \n",
      "897   3717692402  5     \n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ordersByUsers = (orders.groupby('visitorId', as_index=False).agg({'transactionId': 'nunique'}))\n",
    "ordersByUsers.columns = ['visitorId', 'orders']\n",
    "print(ordersByUsers.sort_values(by='orders', ascending=False).head(10))\n",
    "x_values = pd.Series(range(0,len(ordersByUsers)))\n",
    "plt.scatter(x_values, ordersByUsers['orders'], alpha=0.5)\n",
    "plt.ylabel('Количество заказов')\n",
    "plt.xlabel('Количество пользователей')\n",
    "plt.title('График количества заказов по пользователям')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "Пользователей, сделавших более 3х заказов немного, они могут быть в том числе аномальными или выбросами. если их менее 5%, то мы их сможем отсеить."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Посчитаем 95-й и 99-й перцентили количества заказов на пользователя. Выберем границу для определения аномальных пользователей."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[2. 4.]\n"
     ]
    }
   ],
   "source": [
    "print(np.percentile(ordersByUsers['orders'], [95, 99]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "Дважды заказ оформили не более 5 пользователей, и 1 %  пользователей оформили заказ 4 раза.  Мы можем выбрать пользователей с количеством заказов равным  3 или 4, как нижнюю границу числа заказов и по ней отсеить аномальные значения. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Построим точечный график стоимостей заказов."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x_values = pd.Series(range(0,len(orders['revenue'])))\n",
    "plt.scatter(x_values, orders['revenue'], alpha=0.5)\n",
    "plt.ylabel('Стоимость заказов')\n",
    "plt.xlabel('Количество пользователей')\n",
    "plt.title('График стоимости заказов по пользователям')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "На графике есть аномально большие значения, для более детальной картины сделаем срез по сумме 120000руб."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "x_values = pd.Series(range(0, len(orders)))\n",
    "plt.figure(figsize=(10,4))\n",
    "plt.scatter(x_values, orders['revenue'],\n",
    "            alpha=0.5)\n",
    "plt.title('Точечная диаграмма сумм заказов на одного пользователя')\n",
    "plt.axis([0, 1200, 0, 120000])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "По графику видим несколько дорогих заказов, самый дорогой - 1 294 500. Мы можем отсеить не более 5% аномальных значений с крайними значениями. Если рассмотреть детально и убрать аномальные значения стоимости заказов, то видим что большинство пользователей совершают покупки до 25000-30000 рублей."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Посчитаем 95-й и 99-й перцентили стоимости заказов. Выберите границу для определения аномальных пользователей."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[28000.  58233.2]\n"
     ]
    }
   ],
   "source": [
    "print(np.percentile(orders['revenue'], [95, 99]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#####  ВЫВОД:\n",
    "Мы видим, что не более 5% заказов были ов=формлены на сумму 28000 и выше, а также не более 1% заказов по сотимости превышали 58233.2. Выберем границу 28000, как нижнюю границу для отсеивания аномальных значений по стоимости заказов."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Посчитаем статистическую значимость различий в среднем количестве заказов на посетителя между группами по «сырым» данным.\n",
    "\n",
    "Проверка гипотезы."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Сформулируем гипотезу.\n",
    "\n",
    "* Нулевая гипотеза : \"Статистическая значимость различий в среднем количестве заказов на посетителя в \"сырых данных\" отсутствует\"\n",
    "* Альтернативная гипотеза: \"Статистическая значимость различий в среднем количестве заказов на посетителя в \"сырых данных\" присутствует\"\n",
    "\n",
    "Подготовка данных."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Количество покупателей группы А: 503\n",
      "Количество покупок группы А: 557\n",
      "Количество посетителей группы А: 18736\n",
      "\n",
      "Количество покупателей группы В: 586\n",
      "Количество покупок группы В: 640\n",
      "Количество посетителей группы В: 18916\n"
     ]
    }
   ],
   "source": [
    "ordersByUsersA = orders[orders['group']=='A'].groupby('visitorId', as_index=False).agg({'transactionId':'nunique'})\n",
    "ordersByUsersA.columns = ['visitorId', 'orders']\n",
    "ordersByUsersB = orders[orders['group']=='B'].groupby('visitorId', as_index=False).agg({'transactionId':'nunique'})\n",
    "ordersByUsersB.columns = ['visitorId', 'orders']\n",
    "print('Количество покупателей группы А: {}'.format(len(ordersByUsersA)))\n",
    "print('Количество покупок группы А: {}'.format(ordersByUsersA['orders'].sum()))\n",
    "print('Количество посетителей группы А: {}\\n'.format(visitors[visitors['group']=='A']['visitors'].sum()))\n",
    "print('Количество покупателей группы В: {}'.format(len(ordersByUsersB)))\n",
    "print('Количество покупок группы В: {}'.format(ordersByUsersB['orders'].sum()))\n",
    "print('Количество посетителей группы В: {}'.format(visitors[visitors['group']=='B']['visitors'].sum()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Далее:\n",
    "\n",
    "* Применим для A/B-тестирования метод критерий Манна-Уитни (st.mannwhitneyu).\n",
    "* Критический уровень статистической значимости определим, как p-value = 0,05\n",
    "* Если полученный результат будет меньше < 0,05, то отвергаем нулевую гипотезу: разница статистически значима."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "#составим списки кол-ва заказов sampleA и sampleB со всеми пользователями (в том числе и не купившими) по группам \n",
    "list_orders_1 =[]\n",
    "for i in range(0,(visitors[visitors['group']=='A']['visitors'].sum()-len(ordersByUsersA))):\n",
    "    list_orders_1.append(0)\n",
    "orders_by_non_purchased_users_A = pd.Series(data = list_orders_1, name = 'orders')\n",
    "\n",
    "list_orders_2 =[]\n",
    "for i in range(0,(visitors[visitors['group']=='B']['visitors'].sum()-len(ordersByUsersB))):\n",
    "    list_orders_2.append(0)\n",
    "orders_by_non_purchased_users_B = pd.Series(data = list_orders_2, name = 'orders')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Значение P-value: 0.017\n",
      "Относительный прирост конверсии группы B по отношению к группе A: 0.138\n"
     ]
    }
   ],
   "source": [
    "sampleA = pd.concat([ordersByUsersA['orders'], orders_by_non_purchased_users_A], axis=0)\n",
    "sampleB = pd.concat([ordersByUsersB['orders'], orders_by_non_purchased_users_B], axis=0)\n",
    "\n",
    "alpha = 0.05\n",
    "results = stats.mannwhitneyu(sampleA, sampleB)\n",
    "\n",
    "print('Значение P-value:' ,\"{0:.3f}\".format(results.pvalue))\n",
    "print('Относительный прирост конверсии группы B по отношению к группе A: {:.3f}'.format(sampleB.mean()/sampleA.mean()-1))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Вывод:\n",
    "При анализе «сырых» данных имееются различия в статистической значимости групп A и B. Первое число — p-value = 0.017 и оно меньше 0.05. Значит, нулевую гипотезу о том, что различий статистической значимости между группами нет, отвергаем. Относительный \"проигрыш\" группы A равен 13.8%."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Посчитаем статистическую значимость различий в среднем чеке заказа между группами по «сырым» данным."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Проверим статистическую значимость различий в среднем чеке.\n",
    "\n",
    "Сформулируем гипотезу:\n",
    "\n",
    "* Нулевая гипотеза: \"В среднем чеке различий между группами нет.\"\n",
    "* Альтернативная гипотеза: \"В среденем чеке между группами есть различия.\"\n",
    "\n",
    "Для рассчета статистической значимость различий в среднем чеке, передадим критерию mannwhitneyu() данные о выручке с заказов."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Значение p-value,  0.729\n",
      "Относительная разница величин: 0.259\n"
     ]
    }
   ],
   "source": [
    "print('Значение p-value, ', '{0:.3f}'.format(stats.mannwhitneyu(orders[orders['group']=='A']['revenue'], orders[orders['group']=='B']['revenue'])[1]))\n",
    "print('Относительная разница величин:' , '{0:.3f}'.format(orders[orders['group']=='B']['revenue'].mean()/orders[orders['group']=='A']['revenue'].mean()-1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "p-value = 0.729 и оно намного больше 0.05. Следовательно, причин отвергать нулевую гипотезу и считать, что в среднем чеке есть различия, нет. У группы B средний чек выше, чем у группы A на 26%."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Посчитаем статистическую значимость различий в среднем количестве заказов на посетителя между группами по «очищенным» данным. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "По результатам выполненной уже работы мы можем составить список признаков \"аномальных пользователей\":\n",
    "* Пользователи совершившие больще трех заказов.\n",
    "* Пользователи совершившие заказ на сумму более 28000 рублей.\n",
    "\n",
    "В этом случае мы уберем 5% пользователей с наибольшим числом заказов и от 1% до 5% пользователей с дорогими заказами.\n",
    "\n",
    "На данном этапе делаем два среза: с количеством заказов больще 3 (usersWithManyOrders) и пользователей, совершивших заказы дороже 28000 (usersWithExpensiveOrders). Объединим их в общую таблицу и узнаем количество аномальных пользователей.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1099    148427295\n",
      "18      199603092\n",
      "928     204675465\n",
      "23      237748145\n",
      "684     358944393\n",
      "Name: visitorId, dtype: int64\n",
      "63\n"
     ]
    }
   ],
   "source": [
    "usersWithManyOrders = pd.concat([\n",
    "        ordersByUsersA[ordersByUsersA['orders'] > 3]['visitorId'],\n",
    "        ordersByUsersB[ordersByUsersB['orders'] > 3]['visitorId'],],axis=0,)\n",
    "usersWithExpensiveOrders = orders[orders['revenue'] > 28000]['visitorId']\n",
    "abnormalUsers = (pd.concat([usersWithManyOrders, usersWithExpensiveOrders], axis=0)\n",
    "    .drop_duplicates().sort_values())\n",
    "print(abnormalUsers.head(5))\n",
    "print(abnormalUsers.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Посчитаем статистическую значимость по сформированным выборкам.\n",
    "Сформируем гипотезы:\n",
    "* Нулевая гипотеза : \"Статистическая значимость различий в среднем количестве заказов на посетителя в \"очищенных данных\" отсутствует \"\n",
    "* Альтернативная гипотеза: \"Статистическая значимость различий в среднем количестве заказов на посетителя в \"очищенных данных\" присутствует \""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "sampleAFiltered = pd.concat([\n",
    "    ordersByUsersA[np.logical_not(ordersByUsersA['visitorId'].isin(abnormalUsers))]['orders'],\n",
    "    orders_by_non_purchased_users_A\n",
    "], axis = 0)\n",
    "sampleBFiltered = pd.concat([\n",
    "    ordersByUsersB[np.logical_not(ordersByUsersB['visitorId'].isin(abnormalUsers))]['orders'],\n",
    "    orders_by_non_purchased_users_B\n",
    "], axis = 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "p-value: 0.018\n",
      "Отвергаем нулевую гипотезу\n",
      "Относительный конверсия группы В больше группы А на 14.846%\n"
     ]
    }
   ],
   "source": [
    "alpha = 0.05\n",
    "pv3 = format(stats.mannwhitneyu(sampleAFiltered, sampleBFiltered)[1])\n",
    "print('p-value:', round(float(pv3), 3))\n",
    "if float(pv3) < alpha:\n",
    "    print(\"Отвергаем нулевую гипотезу\")\n",
    "else:\n",
    "    print(\"Не получилось отвергнуть нулевую гипотезу\")\n",
    "      \n",
    "print('Относительный конверсия группы В больше группы А на {0:.3%}'.format(sampleBFiltered.mean()/sampleAFiltered.mean()-1)) "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "*ВЫВОД:*\n",
    "\n",
    "В результате получили 63 анонимных пользователя.\n",
    "Значение p-value (0,017) намного меньше 0,05,  соответсвенно мы отвергаем нулевую гипотезу и имеем основания считать, что конверсии групп А и В различны. Конверсия группы В больше на 15%.\n",
    "\n",
    "Для начала подготовим выборки количества заказов по пользователям по группам теста:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### ВЫВОД:\n",
    "* По «сырым» данным первое число — p-value = 0.017, по очищенным данным p-value = 0.018.\n",
    "* Относительный проигрыш по \"сырым\" данным равен 13.8%, а по очищенным данным 14.8%.\n",
    "* Величина p-value меньше 0.05. Значит, принимаем альтернативную гипотезу, что дает основание отвергнуть предположение об отсутствии различий.\n",
    "* Средний чек группы B больше, чем средний чека группы A"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Посчитаем статистическую значимость различий в среднем чеке заказа между группами по «очищенным» данным."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Значение p-value,  0.977\n",
      "Относительная разница величин: -0.017\n"
     ]
    }
   ],
   "source": [
    "print('Значение p-value, ', '{0:.3f}'.format(stats.mannwhitneyu(orders[np.logical_and(orders['group'] == 'A',\n",
    "                    np.logical_not(orders['visitorId'].isin(abnormalUsers)),)]['revenue'],\n",
    "            orders[np.logical_and(orders['group'] == 'B',np.logical_not(orders['visitorId'].isin(abnormalUsers)),)]\n",
    "                  ['revenue'],)[1]))\n",
    "print('Относительная разница величин:', \"{0:.3f}\".format(orders[np.logical_and(orders['group'] == 'B',np.logical_not(orders['visitorId'].isin(abnormalUsers)),)]\n",
    "                  ['revenue'].mean() / orders[np.logical_and(orders['group'] == 'A',np.logical_not(orders['visitorId']\n",
    "                  .isin(abnormalUsers)),)]['revenue'].mean()- 1))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Вывод:\n",
    "* p-value = 0.977, что намного больше 0.05. Следовательно у нас отсутствуют причины отвергать нулевую гипотезу и считать, что в среднем чеке есть различия.\n",
    "* В группе B сумма среднего чека ниже, чем у группы A (- 0,017).\n",
    "* По сравнению с \"сырыми\" данными p-value незначительно изменился (был 0,729). Cтатистически значимого различия по среднему чеку между группами не получили.\n",
    "* А вот разница между сегментами изменилась существенно (была 0,259), а стала отрицательной. Это означает, что по \"очищенным\" данным средний чек группы B чуть ниже среднего чека группы A.\n",
    "\n",
    "\n",
    "Не смотря на то, что общие выводы по результатам теста не изменились, мы на примере увидели как аномалии могут повлиять рна результаты А/в-тестирования."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Примите решение по результатам теста и объясните его. Варианты решений:\n",
    "*  Остановить тест, зафиксировать победу одной из групп.\n",
    "* Остановить тест, зафиксировать отсутствие различий между группами.\n",
    "* Продолжить тест."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Выводы:\n",
    "- Отсутствуют значимые различия по среднему чеку между группами А и В ни по \"сырым\", ни  по очищенным данным, так же как и отсутствуют значимые различия по конверсии между данными группами ни по \"сырым\", ни по очищенным данным.\n",
    "- Разница по среднему чеку после удаления аномальных данных изменилась существенно и стала отрицательной.\n",
    "- По графику различия конверсии между группами А и В видим, что результаты группы В немного лучше, чем у группы А и конверсия группы В установилась но более высоком уровне, чем конверсия у группы А.\n",
    "- По графику различия среднего чека видим, что результаты группы В более, чем на 30% лучше, но в группе В был зафиксирован резкий скачок, который мог быть обусловлпен дорогим заказом или выбросом.\n",
    "\n",
    "Из выше приведенных фактов, мы делаем вывод, что данный тест нужно остановить и признать его успешным, так как по предоставленным данным сегмент В действительно лучше сегмента А. Группа В статистически лучше группы А по метрикам и график конверсии фиксирует данный результатт.\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Общий вывод по проекту."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* Приоритизация гипотез\n",
    "\n",
    "При использовании фреймворка ICE мы видим приоритет у гипотезы номер 8(\"Запустить акцию, дающую скидку на товар в день рождения \"), также в лидерах гипотезы номер 0(\"Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей\") и 7(\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\"). При использовании фреймворка RICE картина анализа меняется, тут преимущество имеет гипотеза 7(\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\"), на 2м и 3м местах гипотезы 2(\"Добавить блоки рекомендаций товаров на сайт интернет магазина, чтобы повысить конверсию и средний чек заказа\") и 0(\"Добавить два новых канала привлечения трафика, что позволит привлекать на 30% больше пользователей\") соответственно.\n",
    "\n",
    "В случае применения фреймворка RICE гипотеза 7 (\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\")(\"Добавить форму подписки на все основные страницы, чтобы собрать базу клиентов для email-рассылок\") стала приоритетной, так как количество пользователей, которых каснется изменений у этой гипотезы самое большое (reach = 10), а у гипотезы 8(\"Запустить акцию, дающую скидку на товар в день рождения\"), данный параметр намного меньше(reach=1), так как сама по себе гипотеза указывает на пользователей, у которых день рождения в исследуемый период, а таких пользователей мало.\n",
    "\n",
    "* Анализ результатов А/В-тестирования.\n",
    "\n",
    "  - Построены графики кумулятивной выручки и кумулятивного среднего чека по группам. Выявлено, что оба графика имеют тенденцию роста во времени. Но при этом у графика группы В имеется резкий скачок вверх примерно в середине периода.\n",
    "  - Построены графики относительного изменения кумулятивного среднего чека группы B к группе A, кумулятивной конверсии по группам, относительного изменения кумулятивной конверсии. Выявлено, что в начале теста группа B была приблизительно одинакова к группе A, но затем вырвалась вперёд, далее её конверсия немного снизилась, и можно сказать зафиксировалась на определенном уровне.\n",
    "  - Построен точечный график количества заказов по пользователям и стоимостей заказов, с их помощью определены пимерные границы аномальных значений.\n",
    "  - Посчитаны 95-й и 99-й перцентили количества заказов на пользователя и стоимости заказов. Выявлены точные границы определения пользователей с аномальными значениями: те у кого заказов больше 3х, и те чьи покупки более 28000 рублей.\n",
    "  - Посчитаны статистические значимости различий в конверсии и среднем чеке заказа между группами по «сырым» данным, принята нулевая гипотеза: \"В среднем чеке различий между группами нет.\"\n",
    "  - Посчитаны статистические значимости различий в конверсии и среднем чеке заказа между группами по «очищеным» данным, нулевая гипотеза: \"В среднем чеке различий между группами нет.\" не отвергнута.\n",
    "  \n",
    "По итогам проведенного теста принято решение об остановке теста и признания его успешным. Группа B статистически значимо лучше группы A по метрикам, а график конверсии говорит о фиксации результата.\n"
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 1193,
    "start_time": "2023-01-17T07:56:44.536Z"
   },
   {
    "duration": 119,
    "start_time": "2023-01-17T07:58:01.373Z"
   },
   {
    "duration": 15,
    "start_time": "2023-01-17T07:58:29.677Z"
   },
   {
    "duration": 15,
    "start_time": "2023-01-17T07:58:38.116Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-17T07:58:54.916Z"
   },
   {
    "duration": 104,
    "start_time": "2023-01-17T08:02:38.118Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-17T08:02:44.831Z"
   },
   {
    "duration": 13,
    "start_time": "2023-01-17T08:03:01.055Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-17T08:03:35.533Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-17T08:03:45.161Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-17T08:04:29.404Z"
   },
   {
    "duration": 7,
    "start_time": "2023-01-17T08:07:22.535Z"
   },
   {
    "duration": 14,
    "start_time": "2023-01-17T08:07:26.871Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-17T08:08:13.978Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-17T08:10:13.188Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-17T08:10:29.636Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-17T08:10:33.474Z"
   },
   {
    "duration": 66,
    "start_time": "2023-01-17T08:16:25.780Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-17T08:17:06.598Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-17T08:17:32.591Z"
   },
   {
    "duration": 123,
    "start_time": "2023-01-17T08:20:50.594Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-17T08:22:53.763Z"
   },
   {
    "duration": 7,
    "start_time": "2023-01-17T08:23:56.426Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-17T08:26:32.948Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-17T08:26:51.819Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-17T08:27:47.794Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-17T08:27:58.283Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-17T08:28:13.502Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-17T08:32:02.865Z"
   },
   {
    "duration": 8,
    "start_time": "2023-01-17T08:32:53.472Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-17T08:32:57.251Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-17T08:33:34.991Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-17T08:35:23.937Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-17T08:37:05.975Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-17T08:38:31.344Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-17T08:38:50.948Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-17T08:43:20.440Z"
   },
   {
    "duration": 15,
    "start_time": "2023-01-17T08:43:26.224Z"
   },
   {
    "duration": 2,
    "start_time": "2023-01-17T08:49:32.506Z"
   },
   {
    "duration": 147,
    "start_time": "2023-01-17T08:54:56.755Z"
   },
   {
    "duration": 140,
    "start_time": "2023-01-17T08:55:16.159Z"
   },
   {
    "duration": 146,
    "start_time": "2023-01-17T08:58:19.903Z"
   },
   {
    "duration": 296,
    "start_time": "2023-01-17T09:01:49.635Z"
   },
   {
    "duration": 287,
    "start_time": "2023-01-17T09:04:30.124Z"
   },
   {
    "duration": 196,
    "start_time": "2023-01-17T09:10:00.525Z"
   },
   {
    "duration": 344,
    "start_time": "2023-01-17T09:25:15.915Z"
   },
   {
    "duration": 340,
    "start_time": "2023-01-17T09:26:14.029Z"
   },
   {
    "duration": 209,
    "start_time": "2023-01-17T09:28:36.947Z"
   },
   {
    "duration": 353,
    "start_time": "2023-01-17T09:33:10.799Z"
   },
   {
    "duration": 357,
    "start_time": "2023-01-17T09:33:34.510Z"
   },
   {
    "duration": 205,
    "start_time": "2023-01-17T09:36:31.477Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-17T09:39:07.111Z"
   },
   {
    "duration": 239,
    "start_time": "2023-01-17T09:44:00.927Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-17T09:48:11.467Z"
   },
   {
    "duration": 246,
    "start_time": "2023-01-17T09:54:22.727Z"
   },
   {
    "duration": 226,
    "start_time": "2023-01-17T09:58:02.281Z"
   },
   {
    "duration": 184,
    "start_time": "2023-01-17T10:02:36.857Z"
   },
   {
    "duration": 44,
    "start_time": "2023-01-17T10:02:49.852Z"
   },
   {
    "duration": 36,
    "start_time": "2023-01-17T10:04:29.615Z"
   },
   {
    "duration": 38,
    "start_time": "2023-01-17T10:06:34.625Z"
   },
   {
    "duration": 16,
    "start_time": "2023-01-17T10:38:04.828Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-17T10:46:48.108Z"
   },
   {
    "duration": 26,
    "start_time": "2023-01-17T10:49:39.488Z"
   },
   {
    "duration": 13,
    "start_time": "2023-01-17T10:54:38.977Z"
   },
   {
    "duration": 157,
    "start_time": "2023-01-17T11:34:31.355Z"
   },
   {
    "duration": 151,
    "start_time": "2023-01-17T11:34:53.473Z"
   },
   {
    "duration": 140,
    "start_time": "2023-01-17T11:35:07.115Z"
   },
   {
    "duration": 1098,
    "start_time": "2023-01-19T05:23:39.447Z"
   },
   {
    "duration": 122,
    "start_time": "2023-01-19T05:23:40.549Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.674Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.675Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.676Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.678Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.678Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.680Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.681Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.682Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.684Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.685Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.686Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.688Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.689Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.690Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.691Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.692Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.693Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.695Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.696Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.697Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.698Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.699Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.700Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.701Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.749Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.749Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.750Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.751Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.752Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.753Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.754Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.755Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.757Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.758Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.759Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.760Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.761Z"
   },
   {
    "duration": 1,
    "start_time": "2023-01-19T05:23:40.761Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.762Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.763Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.765Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.766Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.767Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.768Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:23:40.769Z"
   },
   {
    "duration": 1058,
    "start_time": "2023-01-19T05:24:18.272Z"
   },
   {
    "duration": 26,
    "start_time": "2023-01-19T05:24:19.332Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T05:24:19.359Z"
   },
   {
    "duration": 31,
    "start_time": "2023-01-19T05:24:19.373Z"
   },
   {
    "duration": 17,
    "start_time": "2023-01-19T05:24:19.406Z"
   },
   {
    "duration": 42,
    "start_time": "2023-01-19T05:24:19.424Z"
   },
   {
    "duration": 17,
    "start_time": "2023-01-19T05:24:19.467Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-19T05:24:19.485Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-19T05:24:19.496Z"
   },
   {
    "duration": 8,
    "start_time": "2023-01-19T05:24:19.510Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T05:24:19.520Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T05:24:19.524Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T05:24:19.534Z"
   },
   {
    "duration": 7,
    "start_time": "2023-01-19T05:24:19.541Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T05:24:19.549Z"
   },
   {
    "duration": 13,
    "start_time": "2023-01-19T05:24:19.560Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T05:24:19.575Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T05:24:19.586Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T05:24:19.592Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T05:24:19.599Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T05:24:19.605Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T05:24:19.615Z"
   },
   {
    "duration": 28,
    "start_time": "2023-01-19T05:24:19.622Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T05:24:19.651Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T05:24:19.662Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T05:24:19.668Z"
   },
   {
    "duration": 152,
    "start_time": "2023-01-19T05:24:19.681Z"
   },
   {
    "duration": 270,
    "start_time": "2023-01-19T05:24:19.836Z"
   },
   {
    "duration": 250,
    "start_time": "2023-01-19T05:24:20.108Z"
   },
   {
    "duration": 194,
    "start_time": "2023-01-19T05:24:20.360Z"
   },
   {
    "duration": 309,
    "start_time": "2023-01-19T05:24:20.555Z"
   },
   {
    "duration": 205,
    "start_time": "2023-01-19T05:24:20.865Z"
   },
   {
    "duration": 318,
    "start_time": "2023-01-19T05:24:21.072Z"
   },
   {
    "duration": 127,
    "start_time": "2023-01-19T05:24:21.392Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T05:24:21.521Z"
   },
   {
    "duration": 143,
    "start_time": "2023-01-19T05:24:21.526Z"
   },
   {
    "duration": 207,
    "start_time": "2023-01-19T05:24:21.671Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T05:24:21.880Z"
   },
   {
    "duration": 18,
    "start_time": "2023-01-19T05:24:21.886Z"
   },
   {
    "duration": 15,
    "start_time": "2023-01-19T05:24:21.906Z"
   },
   {
    "duration": 45,
    "start_time": "2023-01-19T05:24:21.923Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T05:24:21.970Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T05:24:21.982Z"
   },
   {
    "duration": 121,
    "start_time": "2023-01-19T05:24:21.992Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:24:22.115Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:24:22.117Z"
   },
   {
    "duration": 0,
    "start_time": "2023-01-19T05:24:22.118Z"
   },
   {
    "duration": 39,
    "start_time": "2023-01-19T05:30:10.302Z"
   },
   {
    "duration": 39,
    "start_time": "2023-01-19T05:31:00.664Z"
   },
   {
    "duration": 40,
    "start_time": "2023-01-19T05:31:04.726Z"
   },
   {
    "duration": 1232,
    "start_time": "2023-01-19T06:10:52.367Z"
   },
   {
    "duration": 129,
    "start_time": "2023-01-19T06:10:55.012Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:11:09.586Z"
   },
   {
    "duration": 60,
    "start_time": "2023-01-19T06:11:36.242Z"
   },
   {
    "duration": 20,
    "start_time": "2023-01-19T06:11:42.590Z"
   },
   {
    "duration": 13,
    "start_time": "2023-01-19T06:11:44.065Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:11:45.834Z"
   },
   {
    "duration": 46,
    "start_time": "2023-01-19T06:11:48.089Z"
   },
   {
    "duration": 67,
    "start_time": "2023-01-19T06:11:52.901Z"
   },
   {
    "duration": 23,
    "start_time": "2023-01-19T06:11:55.994Z"
   },
   {
    "duration": 22,
    "start_time": "2023-01-19T06:12:27.929Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:12:30.085Z"
   },
   {
    "duration": 7,
    "start_time": "2023-01-19T06:12:31.684Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:12:33.386Z"
   },
   {
    "duration": 88,
    "start_time": "2023-01-19T06:12:36.099Z"
   },
   {
    "duration": 23,
    "start_time": "2023-01-19T06:12:37.620Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:12:39.975Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:12:40.698Z"
   },
   {
    "duration": 7,
    "start_time": "2023-01-19T06:12:44.360Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:12:45.388Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:12:45.744Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:12:46.088Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:12:46.373Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:12:46.860Z"
   },
   {
    "duration": 14,
    "start_time": "2023-01-19T06:12:48.079Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T06:12:49.138Z"
   },
   {
    "duration": 7,
    "start_time": "2023-01-19T06:12:49.514Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:12:50.665Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:12:51.559Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:12:52.278Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:12:52.604Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:12:55.117Z"
   },
   {
    "duration": 13,
    "start_time": "2023-01-19T06:12:55.472Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:13:04.285Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T06:13:04.595Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T06:13:06.511Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:13:06.786Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:13:11.600Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:13:23.208Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:13:23.538Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:13:27.417Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T06:13:31.060Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:13:31.694Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-19T06:13:45.491Z"
   },
   {
    "duration": 126,
    "start_time": "2023-01-19T06:13:53.363Z"
   },
   {
    "duration": 260,
    "start_time": "2023-01-19T06:13:56.059Z"
   },
   {
    "duration": 254,
    "start_time": "2023-01-19T06:13:57.798Z"
   },
   {
    "duration": 193,
    "start_time": "2023-01-19T06:14:02.196Z"
   },
   {
    "duration": 383,
    "start_time": "2023-01-19T06:14:04.962Z"
   },
   {
    "duration": 204,
    "start_time": "2023-01-19T06:14:07.818Z"
   },
   {
    "duration": 346,
    "start_time": "2023-01-19T06:14:12.487Z"
   },
   {
    "duration": 125,
    "start_time": "2023-01-19T06:14:16.323Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:14:20.165Z"
   },
   {
    "duration": 139,
    "start_time": "2023-01-19T06:14:23.818Z"
   },
   {
    "duration": 202,
    "start_time": "2023-01-19T06:14:25.086Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:14:30.463Z"
   },
   {
    "duration": 16,
    "start_time": "2023-01-19T06:15:02.566Z"
   },
   {
    "duration": 15,
    "start_time": "2023-01-19T06:15:04.267Z"
   },
   {
    "duration": 25,
    "start_time": "2023-01-19T06:15:04.994Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:15:11.426Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T06:15:13.704Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T06:15:28.461Z"
   },
   {
    "duration": 13,
    "start_time": "2023-01-19T06:16:19.788Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:19:16.984Z"
   },
   {
    "duration": 58,
    "start_time": "2023-01-19T06:19:25.398Z"
   },
   {
    "duration": 14,
    "start_time": "2023-01-19T06:20:05.496Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:20:34.607Z"
   },
   {
    "duration": 23,
    "start_time": "2023-01-19T06:21:49.092Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-19T06:22:15.070Z"
   },
   {
    "duration": 8,
    "start_time": "2023-01-19T06:22:16.044Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:22:17.936Z"
   },
   {
    "duration": 40,
    "start_time": "2023-01-19T06:22:19.060Z"
   },
   {
    "duration": 23,
    "start_time": "2023-01-19T06:22:22.840Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T06:22:38.967Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:22:39.514Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T06:22:44.120Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:22:45.028Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:22:45.276Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:22:45.444Z"
   },
   {
    "duration": 3,
    "start_time": "2023-01-19T06:22:45.683Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:22:46.859Z"
   },
   {
    "duration": 9,
    "start_time": "2023-01-19T06:22:48.464Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-19T06:22:49.795Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:22:50.390Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T06:22:51.475Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:22:52.385Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:22:53.018Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:22:53.355Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T06:22:56.702Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T06:22:57.334Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T06:23:01.710Z"
   },
   {
    "duration": 16,
    "start_time": "2023-01-19T06:23:02.205Z"
   },
   {
    "duration": 153,
    "start_time": "2023-01-19T06:23:09.027Z"
   },
   {
    "duration": 282,
    "start_time": "2023-01-19T06:23:10.987Z"
   },
   {
    "duration": 180,
    "start_time": "2023-01-19T06:23:12.387Z"
   },
   {
    "duration": 175,
    "start_time": "2023-01-19T06:23:15.570Z"
   },
   {
    "duration": 263,
    "start_time": "2023-01-19T06:23:19.349Z"
   },
   {
    "duration": 204,
    "start_time": "2023-01-19T06:23:22.950Z"
   },
   {
    "duration": 284,
    "start_time": "2023-01-19T06:23:27.836Z"
   },
   {
    "duration": 125,
    "start_time": "2023-01-19T06:23:31.108Z"
   },
   {
    "duration": 4,
    "start_time": "2023-01-19T06:23:33.316Z"
   },
   {
    "duration": 149,
    "start_time": "2023-01-19T06:23:35.468Z"
   },
   {
    "duration": 178,
    "start_time": "2023-01-19T06:23:36.981Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T06:23:40.036Z"
   },
   {
    "duration": 18,
    "start_time": "2023-01-19T06:23:46.125Z"
   },
   {
    "duration": 16,
    "start_time": "2023-01-19T06:23:47.942Z"
   },
   {
    "duration": 24,
    "start_time": "2023-01-19T06:23:49.515Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T06:24:01.036Z"
   },
   {
    "duration": 10,
    "start_time": "2023-01-19T06:24:03.595Z"
   },
   {
    "duration": 8,
    "start_time": "2023-01-19T06:24:58.354Z"
   },
   {
    "duration": 37,
    "start_time": "2023-01-19T06:25:26.946Z"
   },
   {
    "duration": 13,
    "start_time": "2023-01-19T06:25:59.035Z"
   },
   {
    "duration": 14,
    "start_time": "2023-01-19T06:27:15.109Z"
   },
   {
    "duration": 1409,
    "start_time": "2023-01-19T13:24:20.092Z"
   },
   {
    "duration": 106,
    "start_time": "2023-01-19T13:24:21.504Z"
   },
   {
    "duration": 14,
    "start_time": "2023-01-19T13:24:21.612Z"
   },
   {
    "duration": 42,
    "start_time": "2023-01-19T13:24:21.628Z"
   },
   {
    "duration": 11,
    "start_time": "2023-01-19T13:24:21.672Z"
   },
   {
    "duration": 119,
    "start_time": "2023-01-19T13:24:21.685Z"
   },
   {
    "duration": 70,
    "start_time": "2023-01-19T13:24:21.806Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T13:24:21.878Z"
   },
   {
    "duration": 24,
    "start_time": "2023-01-19T13:24:21.892Z"
   },
   {
    "duration": 30,
    "start_time": "2023-01-19T13:24:21.919Z"
   },
   {
    "duration": 40,
    "start_time": "2023-01-19T13:24:21.951Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T13:24:21.993Z"
   },
   {
    "duration": 24,
    "start_time": "2023-01-19T13:24:22.007Z"
   },
   {
    "duration": 24,
    "start_time": "2023-01-19T13:24:22.033Z"
   },
   {
    "duration": 36,
    "start_time": "2023-01-19T13:24:22.059Z"
   },
   {
    "duration": 28,
    "start_time": "2023-01-19T13:24:22.098Z"
   },
   {
    "duration": 23,
    "start_time": "2023-01-19T13:24:22.129Z"
   },
   {
    "duration": 32,
    "start_time": "2023-01-19T13:24:22.154Z"
   },
   {
    "duration": 33,
    "start_time": "2023-01-19T13:24:22.188Z"
   },
   {
    "duration": 52,
    "start_time": "2023-01-19T13:24:22.222Z"
   },
   {
    "duration": 32,
    "start_time": "2023-01-19T13:24:22.276Z"
   },
   {
    "duration": 28,
    "start_time": "2023-01-19T13:24:22.309Z"
   },
   {
    "duration": 26,
    "start_time": "2023-01-19T13:24:22.346Z"
   },
   {
    "duration": 30,
    "start_time": "2023-01-19T13:24:22.374Z"
   },
   {
    "duration": 23,
    "start_time": "2023-01-19T13:24:22.407Z"
   },
   {
    "duration": 59,
    "start_time": "2023-01-19T13:24:22.431Z"
   },
   {
    "duration": 211,
    "start_time": "2023-01-19T13:24:22.492Z"
   },
   {
    "duration": 357,
    "start_time": "2023-01-19T13:24:22.708Z"
   },
   {
    "duration": 328,
    "start_time": "2023-01-19T13:24:23.068Z"
   },
   {
    "duration": 228,
    "start_time": "2023-01-19T13:24:23.398Z"
   },
   {
    "duration": 372,
    "start_time": "2023-01-19T13:24:23.628Z"
   },
   {
    "duration": 260,
    "start_time": "2023-01-19T13:24:24.002Z"
   },
   {
    "duration": 343,
    "start_time": "2023-01-19T13:24:24.264Z"
   },
   {
    "duration": 177,
    "start_time": "2023-01-19T13:24:24.609Z"
   },
   {
    "duration": 5,
    "start_time": "2023-01-19T13:24:24.788Z"
   },
   {
    "duration": 186,
    "start_time": "2023-01-19T13:24:24.794Z"
   },
   {
    "duration": 269,
    "start_time": "2023-01-19T13:24:24.982Z"
   },
   {
    "duration": 6,
    "start_time": "2023-01-19T13:24:25.256Z"
   },
   {
    "duration": 21,
    "start_time": "2023-01-19T13:24:25.263Z"
   },
   {
    "duration": 18,
    "start_time": "2023-01-19T13:24:25.286Z"
   },
   {
    "duration": 59,
    "start_time": "2023-01-19T13:24:25.307Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T13:24:25.369Z"
   },
   {
    "duration": 12,
    "start_time": "2023-01-19T13:24:25.383Z"
   },
   {
    "duration": 7,
    "start_time": "2023-01-19T13:24:25.397Z"
   },
   {
    "duration": 63,
    "start_time": "2023-01-19T13:24:25.406Z"
   },
   {
    "duration": 18,
    "start_time": "2023-01-19T13:24:25.471Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": true
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
